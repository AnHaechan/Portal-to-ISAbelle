/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma Image_closed_trancl: assumes "r `` X \<subseteq> X" shows "r\<^sup>* `` X = X"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma [simp]: "finite (nodes_of g - set ys)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma [simp]: "x \<notin> nodes_of g \<Longrightarrow> nexts g x = []"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma dfs_subset_reachable_visit_nodes: "set (dfs g xs ys) \<subseteq> reachable g xs \<union> set ys"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma dfs_app: "dfs g (xs@ys) zs = dfs g ys (dfs g xs zs)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma nextss_Cons: "nextss g (x#xs) = set (nexts g x) \<union> nextss g xs"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma reachable_append: "reachable g (xs @ ys) = reachable g xs \<union> reachable g ys"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma reachable_nexts: "reachable g (nexts g x) \<subseteq> reachable g [x]"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma visit_subset_dfs: "set ys \<subseteq> set (dfs g xs ys)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> theorem "y \<in> set (dfs g [x] []) = ((x,y) \<in> (set g)\<^sup>*)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma reachable_closed_dfs: "reachable g xs \<subseteq> set(dfs g xs [])"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> theorem dfs_eq_reachable: "set (dfs g xs []) = reachable g xs"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma nextss_closed_dfs: "nextss g (dfs g xs []) \<subseteq> set (dfs g xs [])"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma nextss_closed_dfs'[rule_format]: "nextss g ys \<subseteq> set xs \<union> set ys \<longrightarrow> nextss g (dfs g xs ys) \<subseteq> set (dfs g xs ys)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma dfs2_invariant: "dfs2_dom (g, xs, ys) \<Longrightarrow> set ys \<subseteq> set (dfs2 g xs ys)"
/home/qj213/afp-2021-10-22/thys/Depth-First-Search/DFS.thy <PATH_AND_THEOREM_SEP> lemma next_subset_dfs: "set xs \<subseteq> set (dfs g xs ys)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun2.thy <PATH_AND_THEOREM_SEP> lemma braun_size_merge: "braun (Node l x r) \<Longrightarrow> braun(merge l r) \<and> size(merge l r) = size l + size r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun2.thy <PATH_AND_THEOREM_SEP> lemma heap_merge: "\<lbrakk> braun (Node l x r); heap l; heap r \<rbrakk> \<Longrightarrow> heap(merge l r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun2.thy <PATH_AND_THEOREM_SEP> lemma del_left_braun_size: "del_left t = (x,t') \<Longrightarrow> braun t \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> braun t' \<and> size t = size t' + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun2.thy <PATH_AND_THEOREM_SEP> lemma replace_min_sift_down: "braun (Node l a r) \<Longrightarrow> replace_min x (Node l a r) = sift_down l x r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun2.thy <PATH_AND_THEOREM_SEP> lemma mset_tree_merge: "braun (Node l x r) \<Longrightarrow> mset_tree(merge l r) = mset_tree l + mset_tree r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma set_insert[simp]: "set_tree(insert x t) = {x} \<union> (set_tree t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma size_insert[simp]: "size(insert x t) = size t + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma height_size_braun: "braun t \<Longrightarrow> 2 ^ (height t) \<le> 2 * size t + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_set: "del_left t = (x,t') \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> set_tree t = {x} \<union> set_tree t'"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_insert: "mset_tree(insert x t) = {#x#} + mset_tree t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma heap_insert: "heap t \<Longrightarrow> heap(insert x t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_del_min: assumes "braun t" "t \<noteq> Leaf" shows "mset_tree(del_min t) = mset_tree t - {#get_min t#}"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma get_min: "\<lbrakk> heap t; t \<noteq> Leaf \<rbrakk> \<Longrightarrow> get_min t = Min_mset (mset_tree t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_size: "del_left t = (x,t') \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> size t = size t' + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_heap: "del_left t = (x,t') \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> heap t \<Longrightarrow> heap t'"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma heap_del_min: "heap t \<Longrightarrow> braun t \<Longrightarrow> heap(del_min t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_sift_down: "braun(Node l a r) \<Longrightarrow> braun(sift_down l a r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma heap_sift_down: "braun(Node l a r) \<Longrightarrow> heap l \<Longrightarrow> heap r \<Longrightarrow> heap(sift_down l a r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_braun: "del_left t = (x,t') \<Longrightarrow> braun t \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> braun t'"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_del_min: "braun t \<Longrightarrow> braun(del_min t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma set_sift_down: "braun(Node l a r) \<Longrightarrow> set_tree(sift_down l a r) = {a} \<union> (set_tree l \<union> set_tree r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_sift_down: "braun(Node l a r) \<Longrightarrow> mset_tree(sift_down l a r) = {#a#} + (mset_tree l + mset_tree r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_mset_plus: "del_left t = (x,t') \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> mset_tree t = {#x#} + mset_tree t'"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_insert: "braun t \<Longrightarrow> braun(insert x t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Priority_Queue_Braun.thy <PATH_AND_THEOREM_SEP> lemma size_sift_down: "braun(Node l a r) \<Longrightarrow> size(sift_down l a r) = size l + size r + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma size_prod_measure[measure_function]: "is_measure f \<Longrightarrow> is_measure g \<Longrightarrow> is_measure (size_prod f g)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma merge_height: "height (merge l r) \<le> Suc (max (height l) (height r))"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma height_insert_ge: "height t \<le> height (insert x t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_heap_of_A_log_bound: "t_heap_of_A xs \<le> length xs * (nlog2 (length xs + 1) + 1)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma sorted_list_of_B: "braun t \<Longrightarrow> heap t \<Longrightarrow> sorted (list_of_B t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_left_height: "del_left t = (v, t') \<Longrightarrow> t \<noteq> Leaf \<Longrightarrow> height t' \<le> height t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma heapify_snd_tup: "heapify n xs = (t, ys) \<Longrightarrow> n \<le> length xs \<Longrightarrow> ys = drop n xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_tree_merge[simp]: "mset_tree (merge l r) = mset_tree l + mset_tree r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemmas size_heapify = arg_cong[OF mset_heapify, where f=size, simplified]
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_height_r_le: "braun (Node l x r) \<Longrightarrow> height r \<le> height l"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemmas t_list_of_B_braun_simps = t_list_of_B.psimps[OF t_list_of_B_braun_ptermination]
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_heapify: "n \<le> length xs \<Longrightarrow> braun (fst (heapify n xs))"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma sorted_list_of_A: "heap t \<Longrightarrow> sorted (list_of_A t)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_height_node_eq: assumes b: "braun (Node l x r)" shows "height (Node l x r) = Suc (height l)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_tree_heap_of_A: "mset_tree (heap_of_A xs) = mset xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma sortedA: "sorted (list_of_A (heap_of_A xs))"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_A_log_bound: "braun t \<Longrightarrow> t_list_of_A t \<le> 2 * nlog2 (size t + 1) * size t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_list_of_B: "braun t \<Longrightarrow> mset (list_of_B t) = mset_tree t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_del_left_bound: "t \<noteq> Leaf \<Longrightarrow> t_del_left t \<le> 2 * height t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma heapify_correct: "n \<le> length xs \<Longrightarrow> heapify n xs = (t, ys) \<Longrightarrow> size t = n \<and> heap t \<and> braun t \<and> mset_tree t = mset (take n xs)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_B_induct: "braun t \<Longrightarrow> height t \<le> n \<Longrightarrow> t_list_of_B t \<le> 3 * (n + 1) * size t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma msetA: "mset (list_of_A (heap_of_A xs)) = mset xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_merge_height: "t_merge l r \<le> max (height l) (height r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_A_induct: "height t \<le> n \<Longrightarrow> t_list_of_A t \<le> 2 * n * size t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_heap_of_A_bound: "t_heap_of_A xs \<le> length xs * (height (heap_of_A xs) + 1)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma list_of_B_braun_ptermination: "braun t \<Longrightarrow> list_of_B_dom t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemmas list_of_B_braun_simps = list_of_B.psimps[OF list_of_B_braun_ptermination]
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma heap_heapify: "n \<le> length xs \<Longrightarrow> heap (fst (heapify n xs))"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_list_of_A[simp]: "mset (list_of_A t) = mset_tree t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma del_min_height: "braun t \<Longrightarrow> height (del_min t) \<le> height t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_heap_of_A: "braun (heap_of_A xs)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma set_list_of_B: "braun t \<Longrightarrow> set (list_of_B t) = set_tree t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma braun_height_l_le: assumes b: "braun (Node l x r)" shows "height l \<le> Suc (height r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma size_heap_of_A: "size (heap_of_A xs) = length xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_del_min_bound: "braun t \<Longrightarrow> t_del_min t \<le> 3 * height t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_B_braun_ptermination: "braun t \<Longrightarrow> t_list_of_B_dom t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_A_bound: "t_list_of_A t \<le> 2 * height t * size t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma set_tree_merge[simp]: "set_tree (merge l r) = set_tree l \<union> set_tree r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma msetB: "mset (list_of_B (heap_of_B xs)) = mset xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma mset_heapify: "n \<le> length xs \<Longrightarrow> mset_tree (fst (heapify n xs)) = mset (take n xs)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma heapify_snd: "n \<le> length xs \<Longrightarrow> snd (heapify n xs) = drop n xs"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> theorem t_sortA: "t_heap_of_A xs + t_list_of_A (heap_of_A xs) \<le> 3 * length xs * (nlog2 (length xs + 1) + 1)" (is "?lhs \<le> _")
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma sift_down_height: "braun (Node l x r) \<Longrightarrow> height (sift_down l x r) \<le> height (Node l x r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_list_of_B_bound: "braun t \<Longrightarrow> t_list_of_B t \<le> 3 * (height t + 1) * size t"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_heapify_induct: "i \<le> length xs \<Longrightarrow> t_heapify i xs + height (fst (heapify i xs)) \<le> 5 * i + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma heap_heap_of_A: "heap (heap_of_A xs)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_heap_of_B_bound: "t_heap_of_B xs \<le> 6 * length xs + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_insert_height: "t_insert x t \<le> height t + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma merge_heap: "heap l \<Longrightarrow> heap r \<Longrightarrow> heap (merge l r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma sortedB: "sorted (list_of_B (heap_of_B xs))"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> theorem t_sortB: "t_heap_of_B xs + t_list_of_B (heap_of_B xs) \<le> 3 * length xs * (nlog2 (length xs + 1) + 3) + 1" (is "?lhs \<le> _")
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_heapify_bound: "i \<le> length xs \<Longrightarrow> t_heapify i xs \<le> 5 * i + 1"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma merge_size[termination_simp]: "size (merge l r) = size l + size r"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma t_sift_down_height: "braun (Node l x r) \<Longrightarrow> t_sift_down l x r \<le> height (Node l x r)"
/home/qj213/afp-2021-10-22/thys/Priority_Queue_Braun/Sorting_Braun.thy <PATH_AND_THEOREM_SEP> lemma set_list_of_A[simp]: "set (list_of_A t) = set_tree t"
